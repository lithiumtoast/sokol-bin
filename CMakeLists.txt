#
# project: sokol-bin
#
cmake_minimum_required(VERSION 2.8)
project(sokol-bin)
# include the fips main cmake file
get_filename_component(FIPS_ROOT_DIR "../fips" ABSOLUTE)
include("${FIPS_ROOT_DIR}/cmake/fips.cmake")

# include_directories(src)
fips_setup()

add_definitions(-DSOKOL_NO_DEPRECATED)
if (FIPS_EMSCRIPTEN)
    add_definitions(-DSOKOL_GLES3)
elseif (FIPS_RASPBERRYPI)
    add_definitions(-DSOKOL_GLES2)
elseif (FIPS_ANDROID)
    add_definitions(-DSOKOL_GLES3)
elseif (SOKOL_USE_D3D11)
    add_definitions(-DSOKOL_D3D11)
elseif (SOKOL_USE_METAL)
    add_definitions(-DSOKOL_METAL)
elseif (FIPS_WINDOWS)
    add_definitions(-DSOKOL_GLCORE33)
elseif (FIPS_MACOS)
    add_definitions(-DSOKOL_GLCORE33)
elseif (FIPS_LINUX)
    add_definitions(-DSOKOL_GLCORE33)
elseif (FIPS_IOS)
    add_definitions(-DSOKOL_GLES3)
endif()

fips_vs_warning_level(3)

fips_include_directories(ext/sokol)

fips_begin_sharedlib(sokol_app)
    if (FIPS_OSX)
        add_definitions(-fobjc-arc)
        fips_files(src/sokol_app.m)
        if (FIPS_IOS)
            if (SOKOL_USE_METAL)
                fips_frameworks_osx(UIKit Metal MetalKit)
            else()
                fips_frameworks_osx(UIKit OpenGLES)
            endif()
        else()
            if (SOKOL_USE_METAL)
                fips_frameworks_osx(Cocoa QuartzCore Metal MetalKit)
            else()
                fips_frameworks_osx(Cocoa QuartzCore OpenGL)
            endif()
        endif()
    else()
        fips_files(src/sokol_app.c)
        if (FIPS_WINDOWS)
            if (SOKOL_D3D11)
            else()
                fips_libs(opengl32)
            endif()
        elseif (FIPS_ANDROID)
            fips_libs(GLESv3 EGL log android)
        elseif (FIPS_LINUX)
            fips_libs(X11 GL m dl GLU)
        endif()
    endif()
fips_end_sharedlib()

fips_finish()


